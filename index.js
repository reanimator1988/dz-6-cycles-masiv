// const numbers = [5, 8, -1, '-6', 11, 'ololo', '-2']
// let sum = 0
// 	for (let i = 0; i < numbers.length; i++) {
//   		sum += numbers[i]
// }
// alert('Sum is ' + sum)

// 1) оголоcити numbers
// 2) присвоїти numbers масив з 7 елементів 5, 8, -1, '-6', 11, 'ololo', '-2': numbers = [5, 8, -1, '-6', 11, 'ololo', '-2']
// 3) оголосити sum
// 4) присвоїти sum 0: sum = 0
// 5) оголосити i
// 6) присвоїти i 0: i = 0
// 7) перевірити, чи i менше довжини масиву: 0 < 7 - так
// 9) присвоїти sum попереднє значення додавання на 0-й елемент масиву: sum = 0 + 5 = 5
//10) збільшити i на одиницю: i = 1
//11) перевірити, чи i менше довжини масиву: 1 < 7 - так
//13) присвоїти sum попереднє значення додавання на 1-й елемент масиву: sum = 5 + 8 = 13
//14) збільшити i на одиницю: i = 2
//15) перевірити, чи i менше довжини масиву: 2 < 7 - так
//17) присвоїти sum попереднє значення додавання на 2-й елемент масиву: sum = 13 - 1 = 12
//18) збільшити i на одиницю: i = 3
//19) перевірити, чи i менше довжини масиву: 3 < 7 - так
//20) присвоїти sum попереднє значення додавання на 3-й елемент масиву: sum = 12 '-6'
//21) вивести повідомлення Sum is 12-611ololo-2

// щоб добуток правильно рахувався, треба:

const numbers = [5, 8, -1, '-6', 11, 'ololo', '-2']
let sum = 0
	for (let i = 0; i < numbers.length; i++) {
		if (isNaN(numbers[i])) {continue}
	    	sum += Number(numbers[i])
	}
alert('Sum is ' + sum)


// 1) оголоcити numbers
// 2) присвоїти numbers масив з 7 елементів 5, 8, -1, '-6', 11, 'ololo', '-2': numbers = [5, 8, -1, '-6', 11, 'ololo', '-2']
// 3) оголосити sum
// 4) присвоїти sum 0: sum = 0
// 5) оголосити i
// 6) присвоїти i 0: i = 0
// 7) перевірити, чи i менше довжини масиву: 0 < 7 - так
// 8) рядок перевіряє, чи значення масиву numbers[i] не є числом (NaN)
// 9) присвоїти sum попереднє значення додавання на 0-й елемент масиву: sum = 0 + 5 = 5
//10) збільшити i на одиницю: i = 1
//11) перевірити, чи i менше довжини масиву: 1 < 7 - так
//12) рядок перевіряє, чи значення масиву numbers[i] не є числом (NaN)
//13) присвоїти sum попереднє значення додавання на 1-й елемент масиву: sum = 5 + 8 = 13
//14) збільшити i на одиницю: i = 2
//15) перевірити, чи i менше довжини масиву: 2 < 7 - так
//16) рядок перевіряє, чи значення масиву numbers[i] не є числом (NaN)
//17) присвоїти sum попереднє значення додавання на 2-й елемент масиву: sum = 13 - 1 = 12
//18) збільшити i на одиницю: i = 3
//19) перевірити, чи i менше довжини масиву: 3 < 7 - так
//20) рядок перевіряє, чи значення масиву numbers[i] не є числом (NaN)
//21) присвоїти sum попереднє значення додавання на 3-й елемент масиву: sum = 12 - 6 = 6
//22) збільшити i на одиницю: i = 4
//23) перевірити, чи i менше довжини масиву: 4 < 7 - так
//24) рядок перевіряє, чи значення масиву numbers[i] не є числом (NaN)
//25) присвоїти sum попереднє значення додавання на 4-й елемент масиву: sum = 6 + 11 = 17
//26) збільшити i на одиницю: i = 5
//27) перевірити, чи i менше довжини масиву: 5 < 7 - так
//28) рядок перевіряє, чи значення масиву numbers[i] не є числом (NaN),пропускає поточну ітерацію циклу
//29) збільшити i на одиницю: i = 6
//30) перевірити, чи i менше довжини масиву: 6 < 7 - так
//31) присвоїти sum попереднє значення додавання на 6-й елемент масиву: sum = 17 - 2 = 15
//32) збільшити i на одиницю: i = 7
//33) перевірити, чи i менше довжини масиву: 7 < 7 - ні
//34) вивести повідомлення Sum is 15